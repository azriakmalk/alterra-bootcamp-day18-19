name: Build and Deploy

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build
        
      - name: Build jar
        run: gradle bootJar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/springboot-ec2-aws:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{secret.AWS_HOST}}
          username: ${{secret.AWS_USERNAME}}
          key: ${{secret.AWS_AWS_KEY}}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/springboot-ec2-aws:latest
            docker stop ec2_aws
            docker rm ec2_aws
            docker run -d -p 8081:8080 --name ec2_aws ${{ secrets.DOCKERHUB_USERNAME }}/springboot-ec2-aws:latest 
